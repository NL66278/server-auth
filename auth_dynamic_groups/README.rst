==============
Dynamic groups
==============

.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fserver--auth-lightgray.png?logo=github
    :target: https://github.com/OCA/server-auth/tree/11.0/auth_dynamic_groups
    :alt: OCA/server-auth
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/server-auth-11-0/server-auth-11-0-auth_dynamic_groups
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png
    :target: https://runbot.odoo-community.org/runbot/251/11.0
    :alt: Try me on Runbot

|badge1| |badge2| |badge3| |badge4| |badge5| 

This module allows defining groups whose membership is a set dynamically.

This can be based on a condition expressed as python code and / or on the
categories attributed to the partner/user.

In addition this module allows for easy extention to add other methods to
determine group membership.

To define a new way to determine group membership, add a field named
`dynamic_method_<something>` to the res.groups model, and a corresponding
method `dynamic_method_<something>_check`. Compare the fields/methods called
`dynamic_method_formula[_check]` and `dynamic_method_category[_check]`
to see how this is done.

Criteria can be combined. The methods on res.users define wether a user
satisfies some test, the value of the corresponding field on res.groups
determine wether the condition will lead to exclusion of the group, inclusion
of the group, be ignored, or needs to be combined with other conditions.

If any condition excludes a user from a group, this always 'wins'

Finally a group can be marked as being filled automatically. For instance
groups that are maintained from an ldap connection can in this way be
prevented from manual editting.

**Table of contents**

.. contents::
   :local:

Configuration
=============

Normally group membership is maintained by the administrators. Either manually,
or by granting authorities on the user record.

You can select other criteria by which the membership of groups is maintained.

You can have membership determined by a formula, and/or by the categories
of the partner.

Specify that you want to maintain group memebrship automatically by marking
a group as dynamic. You can then set criteria on the tab page `Dynamic`.

If you want to use a formula you will need to enter a condition that will
need to evaluate to either True or False. Specify the condition, using `user`
which is a browse record of the user in question.

There is a constraint on the field to check for validity of this expression.

If you want to base a group on partner category you can enter the categories
that will include the users linked to a partner to the group.

If a user needs to have a category AND needs to satisfy a certain formula,
specify `use` for both criteria.

If a user needs to EITHER have a category OR needs to satify a formula,
specify `include` for both.

If having a category, or satisfying a formula, should exclude a user from a
group, specify `exclude` for that criterium.

If a user is excluded from a group, that criterium always has priority.

When you're satisfied, click the button `Refresh` to prefill the group's
members. The condition will be checked now for every user who logs in.

Usage
=====

We have a group called `Amsterdam` and want it to contain all users from
city of Amsterdam. So we use the membership condition

.. code:: python

   user.partner_id.city == 'Amsterdam'

Now we can be sure every user living in this city is in the right group, and we
can start assigning local menus to it, adjust permissions, etc. Keep in mind
that view overrides can also be restricted by a group id, this gives a lot of
possibilities to dynamically adapt views based on arbitrary properties
reachable via the user record.

Or we want all partners that have the category 'Subscriber' to be added to
be a group subscribers, to give them access to certain website pages or a
subscriber portal.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/server-auth/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us smashing it by providing a detailed and welcomed
`feedback <https://github.com/OCA/server-auth/issues/new?body=module:%20auth_dynamic_groups%0Aversion:%2011.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Therp BV

Contributors
~~~~~~~~~~~~

* Holger Brunn <hbrunn@therp.nl>
* Ronald Portier <ronald@therp.nl>

Other credits
~~~~~~~~~~~~~

* Odoo Community Association: `Icon <https://github.com/OCA/maintainer-tools/blob/master/template/module/static/description/icon.svg>`_.

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/server-auth <https://github.com/OCA/server-auth/tree/11.0/auth_dynamic_groups>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
